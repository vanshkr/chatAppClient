{"ast":null,"code":"import _toConsumableArray from\"D:/chat-app/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:/chat-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import queryString from\"query-string\";import\"./chat.css\";import io from\"socket.io-client\";import{useLocation}from\"react-router-dom\";import InfoBar from\"../infobar/infobar\";import Input from\"../input/input\";import Messages from\"../messages/messages\";import TextContainer from\"../textcontainer/textcontainer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var socket;var Chat=function Chat(props){var endpoint=\"https://chat-a-pplication.herokuapp.com/\";var location=useLocation();// eslint-disable-next-line no-unused-vars\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];// eslint-disable-next-line no-unused-vars\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),room=_useState4[0],setRoom=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messages=_useState8[0],setMessages=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),users=_useState10[0],setUsers=_useState10[1];var sendMessage=function sendMessage(e){e.preventDefault();if(message){socket.emit(\"sendMessage\",message,function(){return setMessage(\"\");});}};useEffect(function(){var _queryString$parse=queryString.parse(location.search),name=_queryString$parse.name,room=_queryString$parse.room;socket=io(endpoint);setName(name);setRoom(room);socket.emit(\"join\",{name:name,room:room},function(){});return function(){socket.disconnect();socket.off();};},[endpoint,location.search]);useEffect(function(){socket.on(\"message\",function(message){setMessages([].concat(_toConsumableArray(messages),[message]));});},[messages]);return/*#__PURE__*/_jsx(\"div\",{className:\"outerContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(InfoBar,{room:room}),/*#__PURE__*/_jsx(Input,{setMessage:setMessage,sendMessage:sendMessage,message:message}),/*#__PURE__*/_jsx(Messages,{messages:messages,name:name}),/*#__PURE__*/_jsx(TextContainer,{})]})});};export default Chat;","map":{"version":3,"sources":["D:/chat-app/client/src/components/chat/chat.js"],"names":["React","useState","useEffect","queryString","io","useLocation","InfoBar","Input","Messages","TextContainer","socket","Chat","props","endpoint","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","users","setUsers","sendMessage","e","preventDefault","emit","parse","search","disconnect","off","on"],"mappings":"kNAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,C,wFAEA,GAAIC,CAAAA,MAAJ,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CACtB,GAAIC,CAAAA,QAAQ,CAAG,0CAAf,CACA,GAAIC,CAAAA,QAAQ,CAAGT,WAAW,EAA1B,CACA;AACA,cAAwBJ,QAAQ,CAAC,EAAD,CAAhC,wCAAOc,IAAP,eAAaC,OAAb,eACA;AACA,eAAwBf,QAAQ,CAAC,EAAD,CAAhC,yCAAOgB,IAAP,eAAaC,OAAb,eACA,eAA8BjB,QAAQ,CAAC,EAAD,CAAtC,yCAAOkB,OAAP,eAAgBC,UAAhB,eACA,eAAgCnB,QAAQ,CAAC,EAAD,CAAxC,yCAAOoB,QAAP,eAAiBC,WAAjB,eACA,eAA0BrB,QAAQ,CAAC,EAAD,CAAlC,0CAAOsB,KAAP,gBAAcC,QAAd,gBAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACA,GAAIR,OAAJ,CAAa,CACXT,MAAM,CAACkB,IAAP,CAAY,aAAZ,CAA2BT,OAA3B,CAAoC,iBAAMC,CAAAA,UAAU,CAAC,EAAD,CAAhB,EAApC,EACD,CACF,CALD,CAOAlB,SAAS,CAAC,UAAM,CACd,uBAAuBC,WAAW,CAAC0B,KAAZ,CAAkBf,QAAQ,CAACgB,MAA3B,CAAvB,CAAQf,IAAR,oBAAQA,IAAR,CAAcE,IAAd,oBAAcA,IAAd,CACAP,MAAM,CAAGN,EAAE,CAACS,QAAD,CAAX,CAEAG,OAAO,CAACD,IAAD,CAAP,CACAG,OAAO,CAACD,IAAD,CAAP,CAEAP,MAAM,CAACkB,IAAP,CAAY,MAAZ,CAAoB,CAAEb,IAAI,CAAJA,IAAF,CAAQE,IAAI,CAAJA,IAAR,CAApB,CAAoC,UAAM,CAAE,CAA5C,EACA,MAAO,WAAM,CACXP,MAAM,CAACqB,UAAP,GAEArB,MAAM,CAACsB,GAAP,GACD,CAJD,CAKD,CAbQ,CAaN,CAACnB,QAAD,CAAWC,QAAQ,CAACgB,MAApB,CAbM,CAAT,CAeA5B,SAAS,CAAC,UAAM,CACdQ,MAAM,CAACuB,EAAP,CAAU,SAAV,CAAqB,SAACd,OAAD,CAAa,CAChCG,WAAW,8BAAKD,QAAL,GAAeF,OAAf,GAAX,CACD,CAFD,EAGD,CAJQ,CAIN,CAACE,QAAD,CAJM,CAAT,CAKA,mBACE,YAAK,SAAS,CAAC,gBAAf,uBACE,aAAK,SAAS,CAAC,WAAf,wBACE,KAAC,OAAD,EAAS,IAAI,CAAEJ,IAAf,EADF,cAEE,KAAC,KAAD,EACE,UAAU,CAAEG,UADd,CAEE,WAAW,CAAEK,WAFf,CAGE,OAAO,CAAEN,OAHX,EAFF,cAOE,KAAC,QAAD,EAAU,QAAQ,CAAEE,QAApB,CAA8B,IAAI,CAAEN,IAApC,EAPF,cAQE,KAAC,aAAD,IARF,GADF,EADF,CAcD,CApDD,CAqDA,cAAeJ,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport \"./chat.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport InfoBar from \"../infobar/infobar\";\r\nimport Input from \"../input/input\";\r\nimport Messages from \"../messages/messages\";\r\nimport TextContainer from \"../textcontainer/textcontainer\";\r\n\r\nlet socket;\r\n\r\nconst Chat = (props) => {\r\n  let endpoint = \"https://chat-a-pplication.herokuapp.com/\";\r\n  let location = useLocation();\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [name, setName] = useState(\"\");\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [room, setRoom] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState(\"\");\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search);\r\n    socket = io(endpoint);\r\n\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    socket.emit(\"join\", { name, room }, () => {});\r\n    return () => {\r\n      socket.disconnect();\r\n\r\n      socket.off();\r\n    };\r\n  }, [endpoint, location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n  }, [messages]);\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n        <InfoBar room={room} />\r\n        <Input\r\n          setMessage={setMessage}\r\n          sendMessage={sendMessage}\r\n          message={message}\r\n        />\r\n        <Messages messages={messages} name={name} />\r\n        <TextContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}