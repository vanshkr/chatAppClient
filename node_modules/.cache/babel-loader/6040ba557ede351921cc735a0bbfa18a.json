{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat-app\\\\client\\\\src\\\\components\\\\chat\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport \"./chat.css\";\nimport io from \"socket.io-client\";\nimport { useLocation } from \"react-router-dom\";\nimport InfoBar from \"../infobar/infobar\";\nimport Input from \"../input/input\";\nimport Messages from \"../messages/messages\";\nimport TextContainer from \"../textcontainer/textcontainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = props => {\n  _s();\n\n  let endpoint = \"http://localhost:5000/\";\n  let location = useLocation(); // eslint-disable-next-line no-unused-vars\n\n  const [name, setName] = useState(\"\"); // eslint-disable-next-line no-unused-vars\n\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState(\"\");\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(endpoint);\n    setName(name);\n    setRoom(room);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.disconnect();\n      socket.off();\n    };\n  }, [endpoint, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        setMessage: setMessage,\n        sendMessage: sendMessage,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"eoS3FOkbm40TdH+hP9deCRwstAo=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/chat-app/client/src/components/chat/chat.js"],"names":["React","useState","useEffect","queryString","io","useLocation","InfoBar","Input","Messages","TextContainer","socket","Chat","props","endpoint","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","users","setUsers","sendMessage","e","preventDefault","emit","parse","search","disconnect","off","on"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport \"./chat.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport InfoBar from \"../infobar/infobar\";\r\nimport Input from \"../input/input\";\r\nimport Messages from \"../messages/messages\";\r\nimport TextContainer from \"../textcontainer/textcontainer\";\r\n\r\nlet socket;\r\n\r\nconst Chat = (props) => {\r\n  let endpoint = \"http://localhost:5000/\";\r\n  let location = useLocation();\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [name, setName] = useState(\"\");\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [room, setRoom] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState(\"\");\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search);\r\n    socket = io(endpoint);\r\n\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    socket.emit(\"join\", { name, room }, () => {});\r\n    return () => {\r\n      socket.disconnect();\r\n\r\n      socket.off();\r\n    };\r\n  }, [endpoint, location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n  }, [messages]);\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n        <InfoBar room={room} />\r\n        <Input\r\n          setMessage={setMessage}\r\n          sendMessage={sendMessage}\r\n          message={message}\r\n        />\r\n        <Messages messages={messages} name={name} />\r\n        {/* <TextContainer /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}