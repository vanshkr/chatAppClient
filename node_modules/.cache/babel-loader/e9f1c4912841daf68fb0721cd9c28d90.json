{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat-app\\\\client\\\\src\\\\components\\\\chat\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport \"./chat.css\";\nimport io from \"socket.io-client\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = props => {\n  _s();\n\n  let location = useLocation();\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const sendMessage = e => {\n    console.log(\"y\");\n    e.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    const ENDPOINT = \"localhost:5000\";\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit(\"join\", {\n      name,\n      room\n    });\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    }, [messages]);\n  });\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: e => {\n          return e.key === \"Enter\" ? sendMessage(e) : null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"QddaYdophg5l4f2RKMrAsGqIZKA=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/chat-app/client/src/components/chat/chat.js"],"names":["React","useState","useEffect","queryString","io","useLocation","socket","Chat","props","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","sendMessage","e","console","log","preventDefault","emit","parse","search","ENDPOINT","off","on","target","value","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,YAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMiB,WAAW,GAAIC,CAAD,IAAO;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAF,IAAAA,CAAC,CAACG,cAAF;;AACA,QAAIR,OAAJ,EAAa;AACXR,MAAAA,MAAM,CAACiB,IAAP,CAAY,aAAZ,EAA2BT,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACD;AACF,GAND;;AAQAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEQ,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBT,WAAW,CAACqB,KAAZ,CAAkBf,QAAQ,CAACgB,MAA3B,CAAvB;AACA,UAAMC,QAAQ,GAAG,gBAAjB;AACApB,IAAAA,MAAM,GAAGF,EAAE,CAACsB,QAAD,CAAX;AAEAf,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAN,IAAAA,MAAM,CAACiB,IAAP,CAAY,MAAZ,EAAoB;AAAEb,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB;AACA,WAAO,MAAM;AACXN,MAAAA,MAAM,CAACiB,IAAP,CAAY,YAAZ;AAEAjB,MAAAA,MAAM,CAACqB,GAAP;AACD,KAJD;AAKD,GAdQ,EAcN,CAAClB,QAAQ,CAACgB,MAAV,CAdM,CAAT;AAgBAvB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACsB,EAAP,CACE,SADF,EAEGd,OAAD,IAAa;AACXG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACD,KAJH,EAKE,CAACE,QAAD,CALF;AAOD,GARQ,CAAT;AAUAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAqBE,QAArB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AACE,QAAA,KAAK,EAAEF,OADT;AAEE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,UAAU,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV,CAF7B;AAGE,QAAA,UAAU,EAAGX,CAAD,IAAO;AACjB,iBAAOA,CAAC,CAACY,GAAF,KAAU,OAAV,GAAoBb,WAAW,CAACC,CAAD,CAA/B,GAAqC,IAA5C;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvDD;;GAAMZ,I;UACWF,W;;;KADXE,I;AAwDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport \"./chat.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nlet socket;\r\n\r\nconst Chat = (props) => {\r\n  let location = useLocation();\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const sendMessage = (e) => {\r\n    console.log(\"y\");\r\n    e.preventDefault();\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search);\r\n    const ENDPOINT = \"localhost:5000\";\r\n    socket = io(ENDPOINT);\r\n\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    socket.emit(\"join\", { name, room });\r\n    return () => {\r\n      socket.emit(\"disconnect\");\r\n\r\n      socket.off();\r\n    };\r\n  }, [location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\r\n      \"message\",\r\n      (message) => {\r\n        setMessages([...messages, message]);\r\n      },\r\n      [messages]\r\n    );\r\n  });\r\n\r\n  console.log(message, messages);\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n        <input\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyPress={(e) => {\r\n            return e.key === \"Enter\" ? sendMessage(e) : null;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}